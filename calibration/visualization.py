import numpy as np
import OpenGL.GL as gl
import pangolin


def visualize(R1, t1, R2, t2, R3, t3, R4, t4, name):
    pangolin.CreateWindowAndBind(name, 640, 480)
    gl.glEnable(gl.GL_DEPTH_TEST)

    # Define Projection and initial ModelView matrix
    scam = pangolin.OpenGlRenderState(
        pangolin.ProjectionMatrix(640, 480, 420, 420, 320, 240, 0.2, 100),
        # pangolin.ModelViewLookAt(0, -10, 0.1, 0, 0, 0, pangolin.AxisNegY))
    pangolin.ModelViewLookAt(-2, 2, -2, 0, 0, 0, pangolin.AxisDirection.AxisY))
    handler = pangolin.Handler3D(scam)

    # Create Interactive View in window
    dcam = pangolin.CreateDisplay()
    dcam.SetBounds(0.0, 1.0, 0.0, 1.0, -640.0 / 480.0)
    dcam.SetHandler(handler)

    w = 0.3
    h = w * 0.75
    z = w * 0.6

    t1r = np.matmul(R1, t1)
    t2r = np.matmul(R2, t2)
    t3r = np.matmul(R3, t3)
    t4r = np.matmul(R4, t4)

    bottom = np.array([[0,0,0,1.0]])
    T1 = np.concatenate([R1, t1], axis=1)
    T1 = np.concatenate([T1, bottom], axis=0)
    T2 = np.concatenate([R2, t2], axis=1)
    T2 = np.concatenate([T2, bottom], axis=0)
    T3 = np.concatenate([R3, t3], axis=1)
    T3 = np.concatenate([T3, bottom], axis=0)
    T4 = np.concatenate([R4, t4], axis=1)
    T4 = np.concatenate([T4, bottom], axis=0)

    while not pangolin.ShouldQuit():
        gl.glClear(gl.GL_COLOR_BUFFER_BIT | gl.GL_DEPTH_BUFFER_BIT)
        gl.glClearColor(1.0, 1.0, 1.0, 1.0)
        dcam.Activate(scam)

        gl.glLineWidth(2)
        gl.glBegin(gl.GL_LINES)
        gl.glColor3f(0.0, 0.0, 0.0)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(w, -h, z)
        gl.glEnd()

        gl.glPushMatrix()
        gl.glMultMatrixd(T1.T)
        gl.glLineWidth(2)
        gl.glBegin(gl.GL_LINES)
        gl.glColor3f(0., 1.0, 1.0)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(w, -h, z)

        gl.glEnd()
        gl.glPopMatrix()

        gl.glPushMatrix()
        gl.glMultMatrixd(T2.T)
        gl.glLineWidth(2)
        gl.glBegin(gl.GL_LINES)
        gl.glColor3f(1.0, 0.7, 1.0)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(w, -h, z)

        gl.glEnd()
        gl.glPopMatrix()

        gl.glPushMatrix()
        gl.glMultMatrixd(T3.T)
        gl.glLineWidth(2)
        gl.glBegin(gl.GL_LINES)
        gl.glColor3f(0.8, 0.8, 0.)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(w, -h, z)

        gl.glEnd()
        gl.glPopMatrix()

        gl.glPushMatrix()
        gl.glMultMatrixd(T4.T)
        gl.glLineWidth(2)
        gl.glBegin(gl.GL_LINES)
        gl.glColor3f(0.7, 0.7, 0.7)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(0, 0, 0)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(-w, h, z)
        gl.glVertex3f(w, h, z)
        gl.glVertex3f(-w, -h, z)
        gl.glVertex3f(w, -h, z)

        gl.glEnd()
        gl.glPopMatrix()

        # gl.glLineWidth(2)
        # gl.glBegin(gl.GL_LINES)
        # gl.glColor3f(0., 1., 0.)
        # gl.glVertex3f(0, 0, 0)
        #
        # gl.glVertex3f(t1r[0], t1r[1], t1r[2])
        # gl.glVertex3f(t1r[0], t1r[1], t1r[2])
        # gl.glVertex3f(t2r[0], t2r[1], t3r[2])
        # gl.glVertex3f(t2r[0], t2r[1], t3r[2])
        # gl.glVertex3f(t3r[0], t3r[1], t4r[2])
        # gl.glVertex3f(t3r[0], t3r[1], t4r[2])
        # gl.glVertex3f(t4r[0], t4r[1], t4r[2])
        #
        # gl.glEnd()

        #
        pangolin.FinishFrame()

